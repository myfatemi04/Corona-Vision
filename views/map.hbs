<!DOCTYPE html>
<html>
	<head>
		<title>Corona Vision - Coronavirus Map</title>
		{{>styles}}

		{{!-- Mapbox --}}
		<link href='https://api.mapbox.com/mapbox-gl-js/v1.8.1/mapbox-gl.css' rel='stylesheet' />
		<script src='https://api.mapbox.com/mapbox-gl-js/v1.8.1/mapbox-gl.js'></script>

		<script>
			let isTouchDevice = 'ontouchstart' in document.documentElement;
			let circle_colors = {
				confirmed: {
					property: 'confirmed',
					type: 'exponential',
					stops: [
						[1e0, '#ffff00'],
						[1e3, '#ffaa00'],
						[1e6, '#ff6600'],
						[1e9, '#ff0000'],
					]
				},
				dconfirmed: {
					property: 'dconfirmed',
					type: 'exponential',
					stops: [
						[1e0, '#ffff00'],
						[1e3, '#ffaa00'],
						[1e6, '#ff6600'],
						[1e9, '#ff0000'],
					]
				},
				deaths: {
					property: 'deaths',
					type: 'exponential',
					stops: [
						[1e0, '#ffaa00'],
						[1e3, '#ff6600'],
						[1e6, '#ff3300'],
						[1e9, '#ff0000'],
					]
				},
				recovered: {
					property: 'recovered',
					type: 'exponential',
					stops: [
						[1e0, 'rgba(0, 255, 0, 0.5)'],
						[1e3, 'rgba(0, 255, 0, 0.75)'],
						[1e6, 'rgba(0, 255, 0, 1)'],
						[1e9, 'rgba(0, 255, 0, 1)'],
					]
				}
			};

			let options = {
				date: "live",
				feature: "confirmed"
			};

			let map = null;
			let popup = new mapboxgl.Popup({
				closeButton: true,
				closeOnClick: true
			});

			function update_feature() {
				let feature = options.feature;
				map.setPaintProperty('confirmed-layer', 'circle-color', circle_colors[feature]);
				map.setPaintProperty('confirmed-layer', 'circle-radius', ['*', 2, ['log10', ['get', feature]]]);
			}

			function update_date() {
				let date = options.date;
				map.getSource('confirmed').setData(`/geojson?date=${date}`);
			}

			function popup_html(data) {
				let formatted = `
				<div class="lato infowindow">
					<code><b>${data.name}</b></code><br/>
					<code><b>Confirmed:</b> ${data.confirmed} (+${data.dconfirmed})</code><br/>
					<code><b>Active:</b> ${data.active} (+${data.dactive})</code><br/>
					<code><b>Deaths:</b> ${data.deaths} (+${data.ddeaths})</code><br/>
					<code><b>Recoveries:</b> ${data.recovered} (+${data.drecovered})</code><br/>
				</div>
				`;
				return formatted;
			}

			function init()  {
				mapboxgl.accessToken = 'pk.eyJ1IjoibXlmYXRlbWkwNCIsImEiOiJjazkwZ2podXQwMWtnM21ucGNmOHp0Z2F2In0.ug8iItUIT1dWaoHaYY2B3A';
				map = new mapboxgl.Map({
					container: 'map',
					style: 'mapbox://styles/myfatemi04/ck90gnq0z07ha1iqvvzjfflbm',
					interactive: true,
					center: [0, 0],
					zoom: 1,
					minZoom: 0
				})
				
				map.on('load', () => {
					map.addSource('confirmed', {
						type: 'geojson',
						data: '/geojson?date=live'
					});
					map.addLayer({
						'id': 'confirmed-layer',
						'type': 'circle',
						'source': 'confirmed',
						'paint': {
							'circle-color': circle_colors.confirmed,
							'circle-radius': ['*', 2, ['log10', ['get', 'confirmed']]],
							'circle-opacity': 0.8
						}
					});
				});

				map.on('mouseenter', 'confirmed-layer', (e) => {
					map.getCanvas().style.cursor = 'pointer';
					let feature = e.features[0];
					popup
						.setLngLat(feature.geometry.coordinates)
						.setHTML(popup_html(feature.properties))
						.addTo(map);
				});

				map.on('mouseleave', 'confirmed-layer', (e) => {
					map.getCanvas().style.cursor = '';
					popup.remove();
				});

				map.on('click', 'confirmed-layer', (e) => {
					map.getCanvas().style.cursor = 'pointer';
					let feature = e.features[0];
					popup
						.setLngLat(feature.geometry.coordinates)
						.setHTML(popup_html(feature.properties))
						.addTo(map);
				});

				$("select[name=map-date]").change(function() {
					options.date = $("select[name=map-date]").val();
					update_date();
				});

				$("select[name=map-feature]").change(function() {
					options.feature = $("select[name=map-feature]").val();
					update_feature();
				});

				init_dates();
			}

			function init_dates() {
				$.getJSON(
					"/list/dates",
					{},
					(data) => {
						for (let result of data) {
							$("#date")[0].innerHTML += `<option value="${result.entry_date}">${result.entry_date == "live" ? "Live map" : result.entry_date}</option>`;
						}
					}
				)
			}
		</script>
	</head>
	<body onload="init()">
		{{>navbar}}
		<div class="scroll box">
			<h3>Map</h3>
			Source: Johns Hopkins University, BNO News, Worldometers. This is <b>not</b> a duplicate of the JHU map.
			<div class="d-flex flex-column">
				<noscript>
					This website requires JavaScript to run.
				</noscript>
				<select name="map-feature" class="custom-input-color form-control my-2">
					<option value="confirmed">Confirmed cases</option>
					<option value="recovered">Recovered cases</option>
					<option value="deaths">Deaths</option>
					<option value="dconfirmed">24H Change in confirmed cases</option>
				</select>
				<select name="map-date" class="custom-input-color form-control my-2" id="date" >
				</select>
			</div>
			<div id="map" class="map my-2"></div>
		</div>
	</body>
</html>
