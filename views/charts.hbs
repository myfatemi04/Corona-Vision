<html>
	<head>
		<title>Corona Vision - COVID-19 Charts</title>
		{{>styles}}
		<script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js"></script>
		<script src="/js/corona_globals.js"></script>
		<script src="/js/corona_chart.js"></script>
		<script src="/js/chart.min.js"></script>
		<script src="/js/selector.js"></script>
		<script>
			function init() {
				init_dates();
			}

			function init_dates() {
				$.getJSON(
					"/list/dates",
					{},
					(data) => {
						for (let result of data) {
							if (result.entry_date != 'live') $("#date")[0].innerHTML += `<option value="${result.entry_date}">${result.entry_date}</option>`;
						}
						
						chart = new_chart("chart");
						CORONA_GLOBALS.reload_function = reload_chart;
						CORONA_GLOBALS.need_child = 0;
						init_chart_options();
						init_selectors();
						reload_chart();
					}
				)
			}
		</script>
	</head>
	<body onload="init()">
		{{>navbar}}
		<div class="container p-2">
			<div class="box d-flex flex-column">
				<a id="download-chart" style="display: none;"></a>
				<canvas id="chart"></canvas>
				<button class="btn custom-button-color my-2" onclick="download_canvas()">
					Save Image
				</button>
				<select id="date" style="display: none;"></select>
				{{>selectors}}
				{{>chart_options}}
				<h1>
					Details about the chart
				</h1>
				<ul>
					<li>
						Please note that the predictions <b>will not always be accurate, and will continue to change as more data is collected.</b><br/>
						This tool is just to provide a general idea of the potential cases in the future.
					</li>
					<li>
						Smoothing factor: looks N days before a certain day, and N days after that certain day, and finds the average. If it's at the end of the chart, it fills in with the closest value.
					</li>
					<li>
						<h3>Prediction method 1: <i>logistic curve.</i> (implemented by Michael Fatemi)</h3>
						<ul>
							<li>Logistic curves are similar to exponential growth, but take into account how much of the population is already infected.</li>
							<li><a href="http://youtu.be/Kas0tIxDvrg">Here's a good explanation.</a></li>
							<li>To fit to the curve, we used <code style="color: #f5f5f5">scipy</code>'s function <code style="color: #f5f5f5">scipy.optimize.curve_fit</code>. X = number of days since the first case, Y = number of cases. The function form is MAX/(1 + e^(-(x - inflection_x)/time_to_rise).</li>
							<li>Because it takes a long time to train, we cached the data.</li>
							<li>Code on <a href="http://github.com/o-wth/Corona-Vision">Github</a> in the file <code><a href="https://github.com/o-wth/Corona-Vision/blob/master/flask_version/corona_predictor.py">corona_predictor.py</a></code>.</li>
						</ul>
					</li>
					<li>
						<h3>Prediction method 2: <i>Long Short Term Memory (LSTM)</i> (implemented by Suhas Nandiraju)</h3>
						<ul>
							<li>This is a method of machine learning that can discover trends in data. We included this because we believe it will be able to model seasonal changes, which the logistic regression cannot do.</li>
							<li><a href="https://youtu.be/xPotjBiIFFA">Here's a good explanation.</a></li>
							<li>We used <code>pandas</code>, <code>numpy</code>, and <code>Tensorflow</code> for the LSTM.<br/></li>
							<li>Because it takes a long time to train, we cached the data.</li>
							<li>Code on <a href="http://github.com/o-wth/Corona-Vision">Github</a> in the file <code><a href="https://github.com/o-wth/Corona-Vision/blob/master/flask_version/Charts_and_ML/coronaTimeSeriesPredictor.py">coronaTimeSeriesPredictor.py</a></code>.</li>
						</ul>						
					</li>
				</ul>
				<h2>Technical info</h2>
				<ul>
					<li>Code: <a href="http://github.com/o-wth/Corona-Vision">Github</a></li>
					<li>
						Logistic regression w/ Python<br/>
						Params:
						<ul>
							<li>
								Bounds:
								<ul>
									<li>max(data) &lt; MAX &lt; 7.3e9</li>
									<li>0 &lt; inflection_x &lt; 800</li>
									<li>1 &lt; time_to_rise &lt; 800</li>
								</ul>
							</li>
							<li>
								Starting values:
								<ul>
									<li>MAX = max(data)</li>
									<li>inflection_x = median date</li>
									<li>time_to_rise = 30</li>
								</ul>
							</li>
							<li>
								Max iterations: 10,000
							</li>
						</ul>
					</li>
					<li>
						LSTM model w/ Python, Tensorflow<br/>
						Params:
						<ul>
							<li>Epochs = 10</li>
							<li>Lookback = 20</li>
							<li>Model: Input [1xLookback] --> LSTM [4] --> Dense [1]</li>
						</ul>
					</li>
				</ul>
			</div>
		</div>
	</body>
</html>
