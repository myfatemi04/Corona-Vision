<!DOCTYPE html>
<html>
	<head>
		<title>Corona Vision - COVID-19 Predictions</title>
		{{>styles}}
		<script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js"></script>
		<script src="/js/chart.min.js"></script>
		<script src="/js/corona_chart.js"></script>
		<script>
			let country = "{{country}}";
			let province = "{{province}}";
			let county = "{{county}}";
			let charts = {};
			function init() {
				let locationData = {country: "{{country}}", province: "{{province}}", county: "{{county}}"};
				let label = locationData.country || "the World";
				if (locationData.province) label = locationData.province + ", " + label;
				if (locationData.county) label = locationData.county + ", " + label;

				$("#countrySelector").val(country);
				$("#provinceSelector").val(province);
				$("#countySelector").val(county);

				let totalChart = newChart("#total-chart", [totalsDataset, trendDataset]);

				totalChart.options.title.text = "Cases in " + label;
				totalChart.update();
				charts['total'] = totalChart;

				let dtotalChart = newChart("#dtotal-chart", [dtotalsDataset, trendDataset])

				dtotalChart.options.title.text = "Daily cases in " + label;
				dtotalChart.update();
				charts['dtotal'] = dtotalChart;

				let deathsChart = newChart("#deaths-chart", [deathsDataset, trendDataset]);

				deathsChart.options.title.text = "Deaths in " + label;
				deathsChart.update();
				charts['deaths'] = deathsChart;

				{{!-- let recoveredChart = newChart("#recovered-chart", [recoveredDataset, trendDataset]);

				recoveredChart.options.title.text = "Recoveries in " + label;
				recoveredChart.update();
				charts['recovered'] = recoveredChart; --}}

				let logisticChart = newChart("#predictions-logistic", logisticPredictionDatasets);
				charts['predictions-logistic'] = logisticChart;

				logisticChart.options.title.text = "Fitting growth model...";
				logisticChart.update();

				$.getJSON(
					"/cases/totals_sequence",
					locationData,
					data => {
						// addData(totalChart, data, ['total']); // positive cases/tests
						addData(totalChart, data, ['total']);
						addTrendline(totalChart);
						addData(dtotalChart, data, ['dtotal']);
						addTrendline(dtotalChart);
						addData(deathsChart, data, ['deaths']);
						addTrendline(deathsChart);
						{{!-- addData(recoveredChart, data, ['recovered']);
						addTrendline(recoveredChart); --}}
						addData(logisticChart, data, ['total']);
						let extendedDates = extendDates([...data.entry_date]);
						$.getJSON(
							"//prediction-dot-tactile-welder-255113.uc.r.appspot.com/predict/log",
							locationData,
							(fit) => {
								logisticChart.options.title.text = "Logistic curve fit for " + label;
								logisticChart.data.labels = extendedDates;
								let logisticData = logisticChart.data.datasets[1];
								logisticData.data = []
								{{!-- let originalLength = logisticData.data.length; --}}
								for (let day = 0; day < logisticChart.data.labels.length; day++) {
									logisticData.data.push(logPredict(fit, day));
								}
								setTimeout(() => {logisticChart.update()}, 500);
							}
						);
					}
				);
			}

			function logPredict(fit, x) {
				return fit.MAX/(1 + Math.exp(-(x - fit.T_INF)/(fit.T_RISE + fit.LIN * x)));
				{{!-- return fit.MAX/(1 + Math.exp(-(x - fit.T_INF)/(fit.T_RISE * (1 + Math.exp((x - fit.T_INF)/fit.LIN))))); --}}
				{{!-- return fit.MAX/(1 + Math.exp(-(x - fit.T_INF)/(fit.T_RISE * (1 + fit.LIN * (x - fit.T_INF) / fit.T_RISE)))); --}}
				{{!-- return fit.MAX/(1 + Math.exp(-(x - fit.T_INF)/fit.T_RISE)); --}}
			}

			function isoDate(date) {
				if (typeof date == 'string') {
					return date;
				} else {
					return date.toISOString().substring(0, 10);
				}
			}

			function setCountry() {
				window.location = "?country=" + $("#countrySelector").val() + "&date={{entry_date}}";
			}

			function setProvince() {
				window.location = "?country=" + country + "&province=" + $("#provinceSelector").val() + "&date={{entry_date}}";
			}

			function setCounty() {
				window.location = "?country=" + country + "&province=" + province + "&county=" + $("#countySelector").val() + "&date={{entry_date}}";
			}

			function getChart(id) {
				return charts[id];
			}
		</script>
	</head>
	<body onload="init()">
		{{>navbar}}
		<div class="container p-2">
			<div class="box d-flex flex-column">
				<a id="download-chart" style="display: none;"></a>
                <span class="text-center font-weight-bold">Please note: predictions will not always be accurate, please do not base decisions off of them.</span>
				<div id="chart-container" class="p-2 d-flex flex-column" style="flex: 1;">
					<div class="d-flex flex-column">
						Select a location:
						<select id="countrySelector" class="custom-input-color form-control m-2" onchange="setCountry()">
							<option value="">Worldwide</option>
							{{#each countries}}
								<option value="{{this.country}}">{{this.country}}</option>
							{{/each}}
						</select>
						{{#if provinces}}
							<select id="provinceSelector" class="custom-input-color form-control m-2" onchange="setProvince()">
								<option value="">Nationwide</option>
								{{#each provinces}}
									<option value="{{this.province}}">{{this.province}}</option>
								{{/each}}
							</select>
						{{/if}}
						{{#if counties}}
							<select id="countySelector" class="custom-input-color form-control m-2" onchange="setCounty()">
								<option value="">Statewide</option>
								{{#each counties}}
									<option value="{{this.county}}">{{this.county}}</option>
								{{/each}}
							</select>
						{{/if}}
					</div>
					<div>
						<canvas id="total-chart"></canvas>
						{{!-- <button class="btn custom-button-color my-2" onclick="download('total-chart')">
							Save Image
						</button> --}}

						<div>Scale <small>(change Y-axis type)</small></div>
						<select onchange="scale(getChart('total'), this.value)" name="scale-type" class="custom-input-color form-control my-2">
							<option value="linear">Linear</option>
							<option value="logarithmic">Logarithmic</option>
						</select>
					</div>
					<div>
						<canvas id="dtotal-chart"></canvas>
						{{!-- <button class="btn custom-button-color my-2" onclick="download('dtotal-chart')">
							Save Image
						</button> --}}

						<div>Scale <small>(change Y-axis type)</small></div>
						<select onchange="scale(getChart('dtotal'), this.value)" name="scale-type" class="custom-input-color form-control my-2">
							<option value="linear">Linear</option>
							<option value="logarithmic">Logarithmic</option>
						</select>

					</div>
					<div>
						<canvas id="deaths-chart"></canvas>
						{{!-- <button class="btn custom-button-color my-2" onclick="download('deaths-chart')">
							Save Image
						</button> --}}

						<div>Scale <small>(change Y-axis type)</small></div>
						<select onchange="scale(getChart('deaths'), this.value)" name="scale-type" class="custom-input-color form-control my-2">
							<option value="linear">Linear</option>
							<option value="logarithmic">Logarithmic</option>
						</select>
					</div>
					<div>
						<h1>Historical recovery data temporarily unavailable</h1>
						{{!-- <canvas id="recovered-chart"></canvas> --}}
						{{!-- <button class="btn custom-button-color my-2" onclick="download('recovered-chart')">
							Save Image
						</button> --}}

						{{!-- <div>Scale <small>(change Y-axis type)</small></div>
						<select onchange="scale(getChart('recovered'), this.value)" name="scale-type" class="custom-input-color form-control my-2">
							<option value="linear">Linear</option>
							<option value="logarithmic">Logarithmic</option>
						</select> --}}
					</div>

					<canvas id="predictions-logistic"></canvas>
					{{!-- <button class="btn custom-button-color my-2" onclick="download('predictions-logistic')">
						Save Image
					</button> --}}
					
					<div>Scale <small>(change Y-axis type)</small></div>
					<select onchange="scale(getChart('logistic'), this.value)" name="scale-type" class="custom-input-color form-control my-2">
						<option value="linear">Linear</option>
						<option value="logarithmic">Logarithmic</option>
					</select>
					<span>
						The logistic regression chart models population growth.</i>.
					</span>
					<div>
						<a href="/charts/info">More info about the charts</a> | <a href="/disclaimer">Disclaimer about predictions</a>
					</div>
				</div>
			</div>
		</div>
	</body>
</html>
