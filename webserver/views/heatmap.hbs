<!DOCTYPE html>
<html>
	<head>
		<title>Corona Vision - Coronavirus Map</title>
		{{>styles}}

		<script async defer
		src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAMm-5SUX6ELt2KfUfEF49RpvgRIj8J6w4&callback=init&libraries=visualization">
		</script>

		<script>
			let dark_mode_style = [
				{elementType: 'geometry', stylers: [{color: '#242f3e'}]},
				{elementType: 'labels.text.stroke', stylers: [{color: '#242f3e'}]},
				{elementType: 'labels.text.fill', stylers: [{color: '#746855'}]},
				{
					featureType: 'administrative.locality',
					elementType: 'labels.text.fill',
					stylers: [{color: '#d59563'}]
				},
				{
					featureType: 'poi',
					elementType: 'labels.text.fill',
					stylers: [{color: '#d59563'}]
				},
				{
					featureType: 'poi.park',
					elementType: 'geometry',
					stylers: [{color: '#263c3f'}]
				},
				{
					featureType: 'poi.park',
					elementType: 'labels.text.fill',
					stylers: [{color: '#6b9a76'}]
				},
				{
					featureType: 'road',
					elementType: 'geometry',
					stylers: [{color: '#38414e'}]
				},
				{
					featureType: 'road',
					elementType: 'geometry.stroke',
					stylers: [{color: '#212a37'}]
				},
				{
					featureType: 'road',
					elementType: 'labels.text.fill',
					stylers: [{color: '#9ca5b3'}]
				},
				{
					featureType: 'road.highway',
					elementType: 'geometry',
					stylers: [{color: '#746855'}]
				},
				{
					featureType: 'road.highway',
					elementType: 'geometry.stroke',
					stylers: [{color: '#1f2835'}]
				},
				{
					featureType: 'road.highway',
					elementType: 'labels.text.fill',
					stylers: [{color: '#f3d19c'}]
				},
				{
					featureType: 'transit',
					elementType: 'geometry',
					stylers: [{color: '#2f3948'}]
				},
				{
					featureType: 'transit.station',
					elementType: 'labels.text.fill',
					stylers: [{color: '#d59563'}]
				},
				{
					featureType: 'water',
					elementType: 'geometry',
					stylers: [{color: '#17263c'}]
				},
				{
					featureType: 'water',
					elementType: 'labels.text.fill',
					stylers: [{color: '#515c6d'}]
				},
				{
					featureType: 'water',
					elementType: 'labels.text.stroke',
					stylers: [{color: '#17263c'}]
				}
			];
		</script>


		<script>

			let map = null;
			let hasDates = false;
			let heatmapFeature = "total";

			function init()  {
				map = new google.maps.Map(document.getElementById('map'), {
					zoom: 2,
					minZoom: 1,
					streetViewControl: false,
					styles: dark_mode_style,
					center: {lat: 0, lng: 0}
				});

				$("select[name=map-date]").change(load_heatmaps);

				$("select[name=map-feature]").change(() => {
					let newFeature = $("select[name=map-feature]").val();
					heatmaps[newFeature].setMap(map);
					heatmaps[heatmapFeature].setMap(null);
					heatmapFeature = $("select[name=map-feature]").val();
				});

				$("select#fpsChange").change(function() {
					fps = $("select#fpsChange").val();
				});

				init_dates();
				load_heatmaps();
			}

			let heatmaps = {};
			function load_heatmaps() {
				let date = $("#date").val();
				$.getJSON(
					"/api/heatmap",
					{date: date},
					format_heatmap_data
				);
			}

			function format_heatmap_data(features) {
				let prevSelectedLayer = null;
				for (let label of ['total', 'dtotal', 'recovered', 'drecovered', 'deaths', 'deaths']) {
					heatmapData = [];
					for (let feature of features) {
						if (feature[label] > 10) {
							heatmapData.push(
								{
									location: new google.maps.LatLng(feature.latitude, feature.longitude),
									weight: Math.sqrt(feature[label])
								}
							);
						}
					}
					let old_layer = heatmaps[label];
					if (old_layer && old_layer.getMap() != null) {
						prevSelectedLayer = old_layer;
					}
					heatmaps[label] = new google.maps.visualization.HeatmapLayer({
						data: heatmapData
					});
				}
				heatmaps.total.setMap(map);
				if (prevSelectedLayer)
					prevSelectedLayer.setMap(null);
			}

			function init_dates() {
				$.getJSON(
					"/list/dates",
					{},
					(data) => {
						if (!hasDates) {
							for (let result of data) {
								let datestr = result.entry_date.substring(0, 10)
								$("#date")[0].innerHTML += `<option value="${datestr}">${datestr}</option>`;
							}
							hasDates = true;
						}
					}
				)
			}

			let do_animation = false;
			let fps = 1;

			function set_start_date() {
				let select = $("select[name=map-date]")[0];
				select.selectedIndex = select.options.length-1;
			}

			function start_animation() {
				if (!do_animation) {
					do_animation = true;
					set_start_date();
					animate();
				}
			}

			function start_from_now() {
				if (!do_animation) {
					do_animation = true;
					animate();
				}
			}

			/* recursive function to animate */
			function animate() {
				if (!do_animation) return;
				let select = $("select[name=map-date]")[0];
				if (select.selectedIndex > 0) {
					select.selectedIndex--;
					$("select[name=map-date]").trigger("change");
					setTimeout(
						() => {
							animate();
						},
						1000/fps
					);
				} else {
					do_animation = false;
				}
			}

			function stop_animation() {
				do_animation = false;
			}
		</script>
	</head>
	<body onload="init()">
		{{>navbar}}
		<div class="scroll box">
			<h3>Map</h3>
			Source: Local government websites, Worldometers, publicly-available location data.<br/>
			<b>Heat Map</b> | <a href="/circlemap">Circle Map</a>
			<div class="d-flex flex-column">
				<noscript>
					This website requires JavaScript to run.
				</noscript>
				<select name="map-feature" class="custom-input-color form-control my-2">
					<option value="total">Total cases</option>
					<option value="recovered">Recovered cases</option>
					<option value="deaths">Deaths</option>
					<option value="dtotal">24H Change in total cases</option>
				</select>
				<select name="map-date" class="custom-input-color form-control my-2" id="date" >
				</select>
				<div class="column-container">
					<button style="flex: 1;" class="btn custom-button-color mx-1 my-1" id="animate" onclick="start_from_now()">
						Start animation from selected date to today
					</button>
					<button style="flex: 1;" class="btn custom-button-color mx-1 my-1" id="animate" onclick="start_animation()">
						Start animation from first day to today
					</button>
					<button style="flex: 1;" class="btn custom-button-color mx-1 my-1" id="stopAnimate" onclick="stop_animation()">
						Stop animation
					</button>
					<select style="flex: 1;" class="custom-input-color form-control my-1" id="fpsChange">
						<option value="4">4x Speed</option>
						<option value="2">2x Speed</option>
						<option value="1" selected>1x Speed</option>
						<option value="0.5">0.5x Speed</option>
						<option value="0.25">0.25x Speed</option>
					</select>
				</div>
			</div>
			<div id="map" class="map my-2"></div>
		</div>
	</body>
</html>
